#!/bin/sh
LIBNAME=handy
OPT="-O0 -g -std=c++11 -Wall -I. -I../$LIBNAME $OPT"
#OPT ?= -O2 -DNDEBUG       # (A) Production use (optimized mode)
#OPT ?= -g              # (B) Debug mode, w/ full line-level debugging symbols
# OPT ?= -O2 -g2 -DNDEBUG # (C) Profiling mode: opt, but w/debugging symbols
OUTPUT=config.mk
SUBDIRS="handy examples"
#git clone https://github.com/yedf/handy-ut ut
#git clone https://github.com/yedf/gtest.git ut/gtest
[ -e app ] && SUBDIRS="$SUBDIRS app"
pkg-config --cflags protobuf > /dev/null 2>&1 && SUBDIRS="$SUBDIRS protobuf"

if [ -e ut/gtest ]; then
    echo "making gtest"
    cd ut/gtest/make; make; cd ../../..
    SUBDIRS="$SUBDIRS ut"
fi

echo '#include <openssl/ssl.h>' > /tmp/handy.test.cc
g++ -c /tmp/handy.test.cc -o /tmp/handy.test.o && SUBDIRS="$SUBDIRS ssl"
SSL=$?
[ $SSL = 0 ] && ! [ -e ssl ] && git clone https://github.com/yedf/handy-ssl.git
! [ $SSL = 0 ] &&  echo "openssl dev not installed, ignore ssl support"

CFLAGS="$CFLAGS $OPT"
CXXFLAGS="$CXXFLAGS $OPT"
LDFLAGS="$LDFLAGS -pthread -L../$LIBNAME -l$LIBNAME"
echo '' > $OUTPUT
echo "CC=cc" >> $OUTPUT
echo "CXX=g++" >> $OUTPUT
echo "CFLAGS=$CFLAGS" >> $OUTPUT
echo "CXXFLAGS=$CXXFLAGS" >> $OUTPUT
echo "LDFLAGS=$LDFLAGS" >> $OUTPUT
echo "SUBDIRS=$SUBDIRS" >> $OUTPUT
echo "LIBNAME=$LIBNAME" >> $OUTPUT
echo "LIBFILE=../$LIBNAME/lib${LIBNAME}.a" >> $OUTPUT
echo "$OUTPUT generated"
